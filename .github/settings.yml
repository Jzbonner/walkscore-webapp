# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. 'repo-name' is a placeholder
  name: walkscore-webapp 

  # A short description of the repository that will show up on GitHub. 'repo-description' is a placeholder
  description: An internal tool for displaying walkability information for a particular neighborhood/area. Built with React.js 

  # A URL with more information about the repository 'the url below' is a placeholder
  homepage: https://github.com/Jzbonner/walkscore-webapp 
 
  # A comma-separated list of topics to set on the repository 'the below' is a placeholder
  topics: reactjs, walkscore-api, tailwindcss, chakra-ui, netlify 

  # Either `true` to make the repository private, or `false` to make it public.
  private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: true

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: true

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # Updates the default branch for this repository.
  default_branch: main-build 

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: true

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: true

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
labels:
  - name: code-bug
    color: '#006b75' 
    description: An issue with the system.

  - name: code-cleanup 
    color: '#e99695'
    description: pertaining to any task that involves codebase cleanup and refactoring.

  - name: dev-pipeline 
    color: '#DFBB96'
    description: pertaining to any task that relates to the building/developing stage of the SDLC for the application 

  - name: update-documentation 
    color: '#C8E019'
    description: any issue pertaining to the readme.md or other install/note files

  - name: feature-enhancement 
    color: '#a2eeef'
    description: new feature or enhancement affecting functionality or design 

  - name: pullrequest/code-review 
    color: '#d876e3'
    description: ready for pull request or code review

# Milestones: define milestones for Issues and Pull Requests
milestones:
  - title: '{mobile-responsive updates needed}' 
    description: use in situations where mobile-responsive issues need to be addressed 
    state: open

  - title: '{deployment staging ready}' 
    description: use in situations where deployment (either for development or production environments)
    state: open

  - title: '{testing report needed}' 
    description: use in situations where unit, e2e or UI testing are required, issues with this milestone should include some type of logging or report 
    state: open

  - title: '{update documentation}' 
    description: use in situations where readme or other documentation needs an update 
    state: open

  - title: '{brainstorm and research}' 
    description: use in situations that require project planning 
    state: open

  - title: '{codebase refactor needed}' 
    description: use in situations where code-cleanup is required, typically for production environments and deployments 
    state: open

  - title: '{ready for pull-request}' 
    description: use in situations where a merge or pull request to main branch is ready 
    state: open

  - title: '{enhancement or feature-request}' 
    description: use in situations where a feature request is the primary milestone for this project 
    state: open

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
collaborators:
  # - username: bkeepers
  #   permission: push
  # - username: hubot
  #   permission: pull

  # Note: `permission` is only valid on organization-owned repositories.
  # The permission to grant the collaborator. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
teams:
  - name: core
    # The permission to grant the team. Can be one of:
    # * `pull` - can pull, but not push to or administer this repository.
    # * `push` - can pull and push, but not administer this repository.
    # * `admin` - can pull, push and administer this repository.
    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitiv or destructive actions.
    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
    permission: admin
  - name: docs
    permission: push

branches:
  # only configure for the production branch of each repo
  - name: main 
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch
        contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: true
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: []
        users: []
        teams: []
